Flask WebApp:-
===========
a) Create a Dockerfile with the necessary instructions to build the image.
b) Ensure you have a requirements.txt listing your Flask dependencies.
c) Build the Docker image using docker build -t pyflask .
d) Run the Docker container with docker run -dit --name flaskapp -p 5000:5000 pyflask
e) Access your Flask app at http://localhost:5000/

Project Tree Structure:-
========================
third_proj
└── flask_mysql
    ├── Dockerfile
    ├── app.py
    ├── requirements.txt
    ├── static
    │   └── source
    │       ├── css
    │       │   ├── bootstrap.min.css
    │       │   └── style.css
    │       ├── image
    │       │   └── 1.jpg
    │       ├── js
    │       │   ├── bootstrap.min.js
    │       │   └── jquery-min.js
    │       └── myfont
    │           └── css
    │               └── all.min.css
    └── templates
        ├── footer.html
        ├── header.html
        ├── home_navbar.html
        └── index.html
        └── error.html

10 directories, 13 files

### This is a basic flask app docker container. To run it locally, execute the commands below,

# docker build -t pyflask .                                        //To build docker image in the current directory
# docker images                                                   //To list out docker images
# docker run -dit --name app -p 5000:5000 pyflask                //To run docker container in detached mode
# docker ps                                                     //To check the running container process
# docker stop <CONTAINER_ID>                                   //To stop the running container
# docker container prune                                      //To delete stopped container

### When the container is running, it will be attached to port 80 of the local machine, go to: http://localhost:5000/ to view the site. 
To test all the pages of the flask application,

URL: http://localhost:5000/
ERROR_URL: http://localhost:5000/error

Note: Flask, by default, is running on port 5000 of the container, but we mapped to host port 5000 to container port 5000.

If you try to view other pages that don't exist in the app.py file, you'll get an error message.
